1)Write a function which generates a secret code from a given string, by shifting characters of alphabet by N places. Example:
Input: encodeString("neogcamp", 2) ––> Output: pgqiecor
 solution:- const encodeString = (nums, value) => {
           let result = ""
           for (num of nums)
           {
              result=result+String.fromCharCode(num.charCodeAt()+value)
           }
           return result
           } 

          console.log(encodeString("neogcamp", 2));
    
2) Given a sentence, return a sentence with first letter of all words as capital.
Example:
Input: toSentenceCase('we are neoGrammers') ––> Output: We Are NeoGrammers
Solution:- const toSentenceCase = (nums) => {
             return nums.split(" ").map((ele)=>ele[0].toUpperCase()+ele.slice(1))
            }
            console.log(toSentenceCase('we are neoGrammers') );

3)Given an array of numbers, your function should return an array in the ascending order.
Example:
Input: sortArray([100,83,32,9,45,61]) ––> Output: [9,32,45,61,83,100]
solution:- const sortArray = nums => {
           for (i = 0; i < nums.length; i++)
           {
               for (j = i; j < nums.length; j++)
               {
                   if (nums[i] > nums[j])
                   {
                       [nums[i],nums[j]]=[nums[j],nums[i]]
                       }
                   }
           }
           return nums
       }
       console.log(sortArray([100, 83, 32, 9, 45, 61]));
  4)     Given a sentence, your function should reverse the order of characters in each word, keeping same sequence of words.
Example:
Input: reverseCharactersOfWord('we are neoGrammers') –––> Output: ew era sremmarGoen
       
   solution : const reverseCharactersOfWord = nums => {
       return nums.split(" ").map((ele)=>ele.split("").reverse().join(""))
   }
   console.log(reverseCharactersOfWord('we are neoGrammers'));       
